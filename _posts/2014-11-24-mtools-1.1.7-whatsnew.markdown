---
layout: post
title: "What's new in mtools 1.1.7"
date: 2014-11-24 14:47:00
categories: mtools
tags: [mtools, release] 
---

Here's a quick summary of the latest changes introduced in _mtools 1.1.7_.

### General Log Parsing

Version 1.1.7 includes support for MongoDB 2.8, in particular the log format. Log lines in 2.8 now contain a "Severity" and "Component" field after the timestamp. These are parsed out in [mtools/util/logevent.py](https://github.com/rueckstiess/mtools/blob/master/mtools/util/logevent.py#L593) and made available to the other tools via the `.component` and `.level` properties. 

Additionally, operations of type `command` are now further parsed for the specific type of command (like `count`, `findAndModify`, ...). This information is accessible via the `.command` property. Non-command operations always return `None` here.

As a reminder: mtools can be used through the Python API. Parsing a log file and accessing any of the fields for each log line can be done very easily in a few lines of Python. I wrote about the API [in this article](http://blog.rueckstiess.com/mtools/2014/04/27/mtools-api.html).


### Changes in mlogfilter

The above new fields are passed down to _mlogfilter_ and log files can now be filtered on `--component`, `--loglevel`, and `--command`. Another change: most filters can now accept multiple values. Finding all queries and updates in a log file can now be done like so:

```
mlogfilter mongod.log --operation query update
```


### Changes in mloginfo

With the addition of the `command` property, mloginfo gained the ability to also include `count` and `findAndModify` operations in the [Query Section](https://github.com/rueckstiess/mtools/wiki/mloginfo#queries-section) (`--queries`). To keep track of the different types of operations, the Query Section also has a new column `operation`, that indicates if the operation for this row was from a `query`, `update`, `count`, etc. The new output format looks like this: 

```
QUERIES

namespace               operation    pattern                                        count    min (ms)    max (ms)    mean (ms)    95%-ile (ms)    sum (ms)

magenta.kumquat         query        {"datetime_used": {"$ne": 1}}                     20       15753       17083        16434         17039.3    328692
magenta.kumquat         update       {"_id": 1}                                       558         101        1512          315           844.8    176034
magenta.grape           query        {"_types": 1, "wheat.feijoa": 1}                 804         101        1262          201          684.85    162311
magenta.$cmd            count        {"datetime_used": {"$ne": 1}}                     24        3474        4529         3841          4219.8    92190
local.slaves            update       {"_id": 1, "host": 1, "ns": 1}                   131         101        1048          310           819.5    40738
magenta.cantaloupe      update       {"_types": 1, "email": 1, "pp_user_id": 1}        13         153       11639         2465          8865.2    32053
magenta.chili.pepper    update       {"_id": 1}                                        77         103         843          269           551.0    20761
magenta.cloudberry      update       {"_id": 1}                                         6         204         900          369          763.75    2218
magenta.kumquat         remove       {"_id": 1}                                         4         420         709          533          685.75    2134
magenta.banana          update       {"_id": 1, "_types": 1}                            8         121         500          263           470.6    2111
magenta.apple           update       {"session_key": 1}                                 7         111         684          277           645.6    1940
magenta.mango           update       {"_id": 1}                                         5         145         764          368           705.0    1840
magenta.cantaloupe      query        {"_types": 1, "request_code": 1}                   6         143         459          277           415.0    1663
magenta.grape           update       {"_id": 1, "_types": 1}                            5         153         427          320           410.6    1601
magenta.$cmd            count        {"_types": 1, "request_code": 1}                   3         205         333          287           332.2    863
magenta.grape           update       {"wheat.feijoa": 1}                                2         218         422          320           411.8    640
magenta.grape           update       {"_id": 1}                                         2         139         278          208          271.05    417
magenta.$cmd            count        {"session_endtime": 1, "session_userid": 1}        1         245         245          245           245.0    245
magenta.apple           query        {"session_endtime": 1, "session_userid": 1}        1         244         244          244           244.0    244
magenta.star.fruit      update       {"_id": 1}                                         1         104         104          104           104.0    104
```

mloginfo also received a new section, which can be activated with `--rsinfo`. This section prints information about the last known replica set configuration (name, members, etc). Here is an example output: 

```
RSINFO
    rs name: replset
 rs members: [ { _id: 0, host: "enter.local:27017" }, { _id: 1, host: "enter.local:27018" }, { _id: 2, host: "enter.local:27019" } ]
 rs version: 1
```

Together with the already existing (as of version 1.1.6) `--rsstate` section, mloginfo is now quite useful to diagnose replica set issues, giving you access to all replica set changes and the current config. The two sections might merge eventually, but for now, they remain separate.


### Changes in mplotqueries

mplotqueries has received the ability to change some of the properties of the graphical elements in scatter plots. With keyboard shortcuts `[` and `]` one can now change the opacity of the data markers (use `{` and `}`  for fine-grained changes). This is useful in certain cases where too many markers of one type cover up all others. Changing the opacity lets you explore the data in more detail. For presentation purposes, you can also change the size of the markers with `<` and `>`, and toggle marker edges with `e`. 


### Changes in mlaunch

mlaunch's changes consist for the most part of bug fixes. The `list` command no longer errors when stumbling across `mongod` instances not created with mlaunch. Shard names did not work correctly when using single stand-alone nodes as shards. And users with an older pymongo version (< 2.5) would see errors when using authentication. There's now a fallback to add a legacy root user in that case.


### Changes in mlogvis

Finally, mlogvis gained two new command line options: `--no-browser` creates the `.html` file, but suppress display of the page in the browser. Additionally, a custom output filename can be specified with `--out`. 


### Upgrade

To upgrade, run `sudo pip install mtools --upgrade` on your machine. If you run a development version of mtools, `git pull` the latest changes from the `rueckstiess/mtools` directory, then switch to the master branch and run `python setup.py develop`. 


### Contributors

Thanks to everyone who reported bugs, new feature requests, and especially to those who submitted pull requests. This is of great help, so please keep contributing to mtools. If you'd like to start contributing, too, have a read of [this page](https://github.com/rueckstiess/mtools/blob/master/tutorials/contributing.md) and if you have any questions, just open an issue [here](https://github.com/rueckstiess/mtools/issues). 


[d3]: http://d3js.org
[mongodb]: http://www.mongodb.com
[install]: https://github.com/rueckstiess/mtools/blob/master/INSTALL.md
[github]: https://github.com/rueckstiess/mtools
[wiki]: https://github.com/rueckstiess/mtools/wiki
[issues]: https://github.com/rueckstiess/mtools/issues
[getlasterror]: http://docs.mongodb.org/manual/reference/command/getLastError/



